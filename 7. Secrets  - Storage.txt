Secrets
create secrets and inject in pods

kubectl create secrete <secrete-name>
kubectl create secret generic prod-db-secret --from-literal=username=produser --from-literal=password=Y4nys7f11

kubectl create secret generic ssh-key-secret --from-file=ssh-privatekey=/path/to/.ssh/id_rsa --from-file=ssh-publickey=/path/to/.ssh/id_rsa.pub

----------------------------------------------------------------------------------------------------------------------------------------
secret-data.yaml

apiVersion: v1
kind: Secret
metadata:
  name: app-secret
data:
  DB_Host: mysql 
  DB_User: root 
  DB_Password: passwrd

kubectl create -f secret-data.yaml 
----------------------------------------------------------------------------------------------------------------------------------------

convert above plain text data to encoded hash data

echo -n 'mysql' | base64  YWRtaW4=
echo -n 'root' | base64 MWYyZDF=
echo -n 'passwrd' | base64 lMmU2N2Rm

put these values in yaml file

----------------------------------------------------------------------------------------------------------------------------------------
secret-data.yaml

apiVersion: v1
kind: Secret
metadata:
  name: app-secret
data:
  DB_Host: YWRtaW4= 
  DB_User: MWYyZDF= 
  DB_Password: lMmU2N2Rm

kubectl create -f secret-data.yaml 
----------------------------------------------------------------------------------------------------------------------------------------
kubectl get secrets
kubectl describe secrets app-secret

echo -n 'YWRtaW4=' | base64  --decode
----------------------------------------------------------------------------------------------------------------------------------------
Inject this secret in pods

apiVersion: v1
kind: Pod
metadata:
  name: myapp-pod
  labels: 
     app: myapp
	 type: front-end
spec:
  containers:
  - name: nginx-container
    image: nginx
	envFrom:
	  - secretRef:
			name: app-secret
			
----------------------------------------------------------------------------------------------------------------------------------------
single Env

env:
  - name: DB_password
	valueFrom:
	  secretKeyRef:
	    name: app-secret
		kay: DB_Password
----------------------------------------------------------------------------------------------------------------------------------------

secret as volume

volumes:
- name: app-secret-volume
  secret:
	secreteName: app-secret
		
		